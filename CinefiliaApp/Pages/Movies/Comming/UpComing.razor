@page "/upcoming"
@inject User user
@inject HttpClient http
@inject NavigationManager Nav
<a id="upcoming"></a>

<TemplatePage Movie_Page="@moviePage" />

@if (moviePage.Results.Count > 0)
{
    <div class="col w-100 m-0 text-center">
        <a class="btn btn-outline-success" href="/upcoming/#upcoming" @onclick="Previous">Anterior</a>
        <input type="number" style="width:50px" @onkeyup="Enter" @bind="numberPage" />
        <label>/500</label>
        <a class="btn btn-outline-success" href="/upcoming/#upcoming" @onclick="Next">Siguiente</a>
    </div>
}

@code {
    MoviePageBLL moviePageBLL;
    MoviePage moviePage;
    int numberPage;

    protected override async Task OnInitializedAsync()
    {
        numberPage = 1;
        moviePage = new();
        moviePageBLL = new MoviePageBLL(http, user.Language);

        moviePage = await moviePageBLL.GetMoviesUpComingByPage(numberPage);

    }

    private async Task Previous()
    {
        if ((numberPage - 1) >= 1)
        {
            numberPage--;
            moviePage = await moviePageBLL.GetMoviesUpComingByPage(numberPage);
        }

    }

    private async Task Next()
    {
        if ((numberPage + 1) <= 500)
        {
            numberPage++;
            moviePage = await moviePageBLL.GetMoviesUpComingByPage(numberPage);
        }

    }
    public async Task Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            if (numberPage > 0 && numberPage <= 500)
            {
                moviePage = await moviePageBLL.GetMoviesUpComingByPage(numberPage);
                StateHasChanged();
                Nav.NavigateTo("/upcoming/#upcoming");
            }


        }

    }
}